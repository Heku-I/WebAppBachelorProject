@{
    ViewData["Title"] = "Home Page";

}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="css/Home.css" />
</head>

<body>

    <span class="d-flex" id="skew-bg"> </span>
    <!--content-->
    <div class="content">
        <div class="text text-dark mt-5">
            <h1 class="display-3" style="font-weight: 900">
                Welcome
                <small class="mb-4 display-5" style="font-weight: 500">
                    to ImageAble
                    <br>
                    Generate a description of any image with AI.
                </small>
            </h1>
        </div>

        <div class="container mt-5 w-50">
            <div id="drop-area" class="dark-container h2">
                <p>
                    Drag and drop
                    <br>
                    an image file here
                    <br>
                    or click to select one.
                </p>
                <input type="file" id="file-input" accept="image/*" style="display: none;" />
            </div>

		
	<!-----
	**TRYING OUT A NEW DIV FOR UPLOADING MULTIPLE IMAGES. THIS ONE WITH ASP!
	https://learn.microsoft.com/en-us/answers/questions/1016900/how-to-upload-multiple-pics-at-a-time-in-asp-net-c

	<form enctype ="multipart/form-data" method"post">
	<dl>
		<dt>
			<label> Upload </label>
		</dt>
		
		<dd>
		<input type="file" asp-for"uploadfile.FormFile" multiple>
		</dd>
	</dl>
	<input class ="btn" type="submit" value="Upload" />
	</form>
	
	--->


            <div id="preview"></div>
            <div id="GenerateButtons"></div>
            <div id="UploadImage"></div> <!--This might need to get removed. Just for debugging atm.-->

            <textarea id="Description" hidden></textarea>
            <div id="evaluationOutput" hidden> </div>

        </div>
    </div>

    <!--end of content-->

    <div class="container mt-5" id="exampleCards">
        <div class="row">

            <div class="col-md-2 mb-3 mt-5">
                <div class="card">
                    <img src="./Images/istockphoto-1457639493-612x612.jpg" class="card-img-top" alt="One pink and two yellow icecream with sprinkles.1">
                    <div class="card-body">
                        <p class="card-text description">One pink and two yellow icecream with sprinkles.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-4 mt-5">
                <div class="card">
                    <img src="./Images/forest-1400475.webp" class="card-img-top" alt="Green forest with tall trees">
                    <div class="card-body">

                        <p class="card-text description">Green forest with tall trees.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-2 mt-5">
                <div class="card">
                    <img src="./Images/argynnis-adippe-2-1374489.webp" class="card-img-top" alt="Yellow butterfly with patterns">
                    <div class="card-body">
                        <p class="card-text description">Yellow butterfly with patterns.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-2 mt-5">
                <div class="card">
                    <img src="./Images/parrot.webp" class="card-img-top" alt="Colorful parrot with yellow and blue feathers">
                    <div class="card-body">

                        <p class="card-text description">Colorful parrot with yellow and blue feathers.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-2 mt-5">
                <div class="card">
                    <img src="./Images/butterfly.webp" class="card-img-top" alt="Small butterfly on orange flowers">
                    <div class="card-body">

                        <p class="card-text description">Small butterfly on orange flowers.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-2 mt-5">
                <div class="card">
                    <img src="./Images/jelly.webp" class="card-img-top" alt="Multiple orange jellyfish">
                    <div class="card-body">

                        <p class="card-text description">Multiple orange jellyfish.</p>
                    </div>
                </div>
            </div>

        </div>
    </div>



    @section scripts {
        <script>



            document.addEventListener("DOMContentLoaded", function () {
                var dropArea = document.getElementById("drop-area");
                var fileInput = document.getElementById("file-input");
                var preview = document.getElementById("preview");
                var imageData = null; 



                fileInput.addEventListener("change", function () {

                    previewImage();


                });




                //I think we need sources for this code:

                //I little inspired by GPT... Might need too make own code.

                dropArea.addEventListener("dragover", function (e) {
                    e.preventDefault();
                    dropArea.classList.add("border", "border-secondary");
                });

                dropArea.addEventListener("dragleave", function () {
                    dropArea.classList.remove("border", "border-secondary");
                });

                dropArea.addEventListener("drop", function (e) {
                    e.preventDefault();
                    dropArea.classList.remove("border", "border-secondary");

                    var files = e.dataTransfer.files;

                    if (files.length > 0) {
                        fileInput.files = files;
                        previewImage();
                    }
                });



                dropArea.addEventListener("click", function () {
                    fileInput.click();
                });

                fileInput.addEventListener("click", function (e) {
                    e.stopPropagation();
                });



                var ButtonManager = {
                    generateButtonContainer: null,

                    init: function() {
                        this.generateButtonContainer = document.getElementById("GenerateButtons");
                        this.generateButtonContainer.innerHTML = '';
                        this.generateButtonContainer.classList.add('d-flex', 'justify-content-center', 'mt-3');
                    },

                    createGenerateButton: function() {
                        var sendButton = document.createElement('button');
                        sendButton.innerText = 'Generate Description';
                        sendButton.classList.add('btn', 'btn-lg', 'btn-success');
                        sendButton.addEventListener('click', function () {
                            sendImageData();
                        });

                        this.generateButtonContainer.appendChild(sendButton);
                    },

                    createUploadButton: function() {
                        var uploadButton = document.createElement('button');
                        uploadButton.innerText = 'Save';
                        uploadButton.classList.add('btn', 'btn-dark');
                        uploadButton.addEventListener('click', function () {
                            saveImage();
                        });

                        this.generateButtonContainer.appendChild(uploadButton);
                    }
                            };

                // Initialize the ButtonManager
                ButtonManager.init();



                /*function createGenerateButton() {
                    var generateButtonContainer = document.getElementById("GenerateButtons");
                    generateButtonContainer.innerHTML = '';
                    generateButtonContainer.classList.add('d-flex', 'justify-content-center', 'mt-3');

                    var sendButton = document.createElement('button');
                    sendButton.innerText = 'Generate Description';
                    sendButton.classList.add('btn', 'btn-lg', 'btn-success');
                    sendButton.addEventListener('click', function () {
                        sendImageData();
                    });

                    generateButtonContainer.appendChild(sendButton);
                }

                function createUploadButton(generateButtonContainer) {
                    var uploadButton = document.createElement('button');
                    uploadButton.innerText = 'Save';
                    uploadButton.classList.add('btn', 'btn-dark');
                    uploadButton.addEventListener('click', function () {
                        saveImage();
                    });

                    generateButtonContainer.appendChild(uploadButton);
                }
                */
           
           

                function previewImage() {
                    var file = fileInput.files[0];

                    if (file) {
                        var reader = new FileReader();

                        reader.onload = function (e) {

                            //The following happens when the image is in preview-mode.

                            preview.innerHTML = '<img src="' + e.target.result + '" alt="Preview" class="img-fluid rounded" />';
                            dropArea.hidden = true;
                            document.getElementById("exampleCards").hidden = true;


                            imageData = e.target.result;
                            
                            //To show button
                           // createGenerateButton();
                            ButtonManager.createGenerateButton();
                            
                        };

                        reader.readAsDataURL(file);
                    };

            };

		
		/* /////////////// -- SENDING MULTIPLE FILES AT A TIME.
		
		function SendMultipleImageData() {
			var imageFiles = fileInput.files[]; 
			if (imageFiles){
				var jsonData = {
				imageBase64: imageData	
				};	
		
			 fetch('/Image/GetMultipleImageFiles', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(jsonData),
                        })
			    .then(response => response.json())
                            .then(data => {
                                console.log('Success:', data);
                                // Display the received description on your page
                                displayDescription(data.description);

				//Displaying the createUploadButton(); 
				createUploadButton();

				//Might add something here to hide the "generate button". Not sure on how we want this yet. 
			
				

                            })
                            .catch((error) => {
                                console.error('Error:', error);
                            });
                    } else {
                        console.error('No image data to send');
			//Trying to display an informationMessage to page: 
			document.getElementById('informationOutput').innerHtml("Please upload an image.");
                    }
                }
		
		

		*/

                //Sending the image to server to get a description
                function sendImageData() {
                    var image = fileInput.files[0];
                    if (image) {
                        var jsonData = { imageBase64: imageData };

                        fetch('/Image/GetImage', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(jsonData),
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log('Success:', data);
                                // Display the received description on your page
                                displayDescription(data.description);

                                descriptionOutput = document.getElementById("Description");

                                //Starting the generateEvaluation function.
                                generateEvaluation();


				                //Displaying the createUploadButton();
                                //createUploadButton(generateButtonContainer);
                                
                                ButtonManager.createUploadButton();
			
				

                            })
                            .catch((error) => {
                                console.error('Error:', error);
                            });
                    } else {
                        console.error('No image data to send');
                    };
            };


                //To display the description on the page. The div-tag is empty and hidden otherwise. 
                function displayDescription(description) {
                    var output = document.getElementById("Description");
                    output.hidden = false; 
                    if (output) {
                        output.innerHTML = description;

                        //Also need to create a button here to be able to modify the description. 
                        //Maybe if the button gets clicked it will turn the text into an input field. 
                        //Or always have an input field which will show. 


                    } else {
                        console.error('Element with ID "Description" was not found.');
                    };
            };


            //Saving the image to the backend (DB and files)
                function saveImage() {
                    var fileInput = document.getElementById('file-input');
                    if (fileInput.files.length > 0) {
                        var file = fileInput.files[0];
                        var description = document.getElementById("Description").value; 

                        var formData = new FormData();
                        formData.append('imageFile', file);
                        formData.append('description', description);

                        fetch('/Image/SaveMeta', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Server responded with: ' + response.status);
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log('Success:', data);
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    } else {
                        console.error('No file selected');
                    };
            };


            //Running the evalutation.
                function generateEvaluation() {
                    var descriptionTextArea = document.getElementById("Description");
                    var description = descriptionTextArea ? descriptionTextArea.textContent.trim() : '';

                    console.log("reached generate evaluation with : " + description);

                    if (description) {
                        var jsonData = { desc: description };

                        fetch('/Image/GetEval', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(jsonData),
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log('Success:', data);
                                displayEvaluation(data.description)
                                // Handle response data here
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                            });
                    } else {
                        console.error('No description data to send');
                    }
                }



            //Displaying the evaluation to the frontend
            function displayEvaluation(evaluation) {
                    var outputEvaluation = document.getElementById("evaluationOutput");
                    outputEvaluation.hidden = false;
                    if (outputEvaluation) {
                       outputEvaluation.innerHTML = evaluation;
                } else {
                        console.error('Element with ID "evaluationOutput" was not found.');
                };
            };




                


            });
        </script>
    }



</body>

</html>
